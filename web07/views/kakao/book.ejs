<div>
  <h1 class="text-center my-5">
    <%=title%>
  </h1>
  <div class="row">
    <!-- col-md-4 : 컬럼이 12칸 중에서 미들 해상도인 경우 4칸 사용 -->
    <form name="frm" class="col-md-4 mb-3">
      <div class="input-group">
        <input name="query" class="form-control" value="Node.js">
        <button class="btn btn-primary">검색</button>
      </div>
    </form>
  </div>
  <div id="div_list"></div>
  <div class="text-center">
    <button id="prev" class="btn btn-primary btn-sm">이전</button>
    <span id="page" class="mx-3">1</span>
    <button id="next" class="btn btn-primary btn-sm">다음</button>
  </div>

  <!--도서검색할 때 여러개가 나오기 때문에 반복은(each)를 사용함. -->
  <!-- thumbnail, title, price 등등은 카카오 API에서 적혀있는 documents에 변수 이름과 같이 사용해야 함-->
  <script id="temp_list" type="x-handlebars-template">
      <table class="table">
          {{#each documents}}
          <tr>
              <td><img src="{{funThumbnail thumbnail}}" width="50px"></td>
              <td><div class="ellipsis">{{title}}</div></td>
              <td>{{price}}</td>
              <td>{{authors}}</td>
              <td width="70"><%-include('modal_book.ejs')%></td>
              <td width="70"><button class="btn btn-success btn-sm cart" book="{{strBook @this}}">카트</button></td>
          </tr>
          {{/each}}
      </table>
  </script>

  <script>
    Handlebars.registerHelper("fncImage", function (image) {
      if (image) {
        return image;
      } else {
        return "/image/no_image.png";
      }
    })
  </script>
  <script>
    Handlebars.registerHelper("strBook", function (book) {
      return JSON.stringify(book);
    })
  </script>
  <script>
    // 이미지가 없는 경우, 내가 가진 이미지로 출력
    Handlebars.registerHelper("funThumbnail", function (thumbnail) {
      if (thumbnail)
        return thumbnail;
      else
        return "/images/no_image.png";
    })
  </script>
</div>

<script type="module">
  import { app } from '/javascripts/config.js';
  import { getDatabase, ref, set, get } from "https://www.gstatic.com/firebasejs/10.14.1/firebase-database.js";
  const db = getDatabase(app);

  let page = 1;
  let size = 5;
  getList();

  // 각 행의 카트 버튼을 클릭한 경우
  $("#div_list").on("click", ".cart", async function () {
    if (uid) {
      const book = JSON.parse($(this).attr("book"));
      const ref_cart = ref(db, `cart/${uid}/${book.isbn}`);
      const snapshot = await get(ref_cart);
      if (snapshot.val()) {
        alert("장바구니에 이미 존재하는 도서입니다.");
      } else {
        await set(ref_cart, book);
        alert("장바구니에 등록되었습니다.");
      }
    }
    else {
      // 돌아올 주소를 target에 저장함
      sessionStorage.setItem("target", window.location.href);
      location.href = "/users/login";
    }
  });

  // form이 Submit되는 경우
  $(frm).on("submit", function (e) {
    e.preventDefault();
    query = $(frm.query).val();
    if (query == "") {
      alert("검색어를 입력하세요!");
    }
    else {
      getList();
    }
  });

  // 다음 버튼 클릭
  $("#next").on("click", function () {
    page++;
    getList();
  })
  // 이전 버튼 클릭
  $("#prev").on("click", function () {
    page--;
    getList();
  })

  // 도서 목록 함수
  // 카카오 API문서를 보면 url, query, Authorization등의 기술 방법 기재
  // $는 jquery
  // type: "get" -> 카카오 API문서에 호출방식이 get으로 적혀있음
  function getList() {
    $.ajax({
      type: "get",
      url: `https://dapi.kakao.com/v3/search/book?target=title&size=${size}&query=${query}&page=${page}`,
      //url: "https://dapi.kakao.com/v3/search/book?target=title", *****
      //data: { query: query, size: size, page },
      headers: { "Authorization": "KakaoAK 0b91218c084a28358b5d595792a6932d" },
      success: function (data) {        // 호출 성공시 실행.
        const temp = Handlebars.compile($("#temp_list").html());
        $("#div_list").html(temp(data));
        $("#total").html(data.meta.pageable_count);

        const last = Math.ceil(data.meta.pageable_count / size);
        $("#page").html(`${page}/${last}`);
        if (page == 1) $("#prev").attr("disabled", true);
        else $("#prev").attr("disabled", false);

        const is_end = data.meta.is_end;
        if (is_end) $("#next").attr("disabled", true);
        else $("#next").attr("disabled", false);
      }
    });
  }
</script>